name: CI/CD

on:
  # Tri
  # Trigger the workflow on pull request to master
  pull_request:
    branches: [master, main]

  # Also allows running this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
#      - uses: github/super-linter@v3
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt
      - name: Run tests
        run: python tests/test_train.py
      - name: Run training
#        run: |
#          output=$(python tests/test_train.py)
#          output="${output//'%'/'%25'}"
#          output="${output//$'\n'/'%0A'}"
#          output="${output//$'\r'/'%0D'}"
#          echo "::set-output name=changelog::$output"
#        id: step1
#      - name: Print changelog
#        run: echo "${{ steps.step1.outputs.changelog }}"
#      - uses: marocchino/sticky-pull-request-comment@v2
#        with:
#          message: |
#           Release ${{ github.sha }} to ${{ steps.step1.outputs.changelog }}
        id: test
        run: |
          output=$(python train.py)
          output="${output//'%'/'%25'}"
          output="${output//$'\n'/'%0A'}"
          output="${output//$'\r'/'%0D'}"
          echo "::set-output name=training_metric::$output"
      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          append: true
          message: |
                Training metrics with commit ${{ github.sha }}.
                ```
                ${{ steps.test.outputs.training_metric }}
                ```
